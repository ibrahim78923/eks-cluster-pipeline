name: Build, Push, Deploy to EKS

on:
  push:
    branches:
      - prod

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
      KUBECTL_NAMESPACE: ${{ secrets.KUBECTL_NAMESPACE }}
    steps:
      - uses: actions/checkout@v3

      # - name: Configure AWS credentials
      #   run: aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Login to ECR
        uses: aws-actions/ecr-login@v3

      - name: Build Docker image
        run: docker build -t $ECR_REPOSITORY:$GITHUB_SHA .

      - name: Tag and push Docker image to ECR
        run: |
          docker tag $ECR_REPOSITORY:$GITHUB_SHA $ECR_REPOSITORY:latest
          docker push $ECR_REPOSITORY:$GITHUB_SHA
          docker push $ECR_REPOSITORY:latest

      # - name: Configure kubectl context
      #   uses: eks-platform/eks-kubectl@v3
      #   with:
      #     cluster-name: ${{ env.EKS_CLUSTER_NAME }}
      #     region: ${{ env.AWS_DEFAULT_REGION }}

      # - name: Apply Kubernetes manifests
      #   run: |
      #     kubectl apply -f deployments.yaml -n ${{ env.KUBECTL_NAMESPACE }}
      #     # Add additional manifest application steps as needed

      # - name: (Optional) Verify deployment status
      #   # Add custom steps to verify successful deployment, e.g., using kubectl get pods




































# name: Deploy to Exarta EKS Cluster

# on:
#   push:
#     branches: [ prod ]

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     # environment:
#     #   name: production
#     #   url: ${{ steps.deploy.outputs.deployment_url }}  # Store deployment URL for notification
#     steps:
#       - uses: actions/checkout@v3

#       - name: Set up AWS credentials
#         uses: aws-actions/configure-aws-credentials@v3
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           region: ${{ secrets.AWS_REGION }}

#       - name: Login to ECR
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Build Docker image
#         uses: docker/build-push-action@v3
#         with:
#           push: true
#           tags: ${{ secrets.ECR_REGISTRY }}/${{ github.repository }}:${{ github.sha }}

#       - name: Configure kubectl with EKS cluster
#         uses: aws-actions/eks-deploy-command@v2
#         with:
#           cluster-name: ${{ secrets.EKS_CLUSTER_NAME }}
#           command: |
#             aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

#       - name: Apply Kubernetes deployment
#         run: |
#           kubectl apply -f deployments.yaml \
#             --image="${{ secrets.ECR_REGISTRY }}/${{ github.repository }}:${{ github.sha }}"
#           # Optional: Specify specific image tag if versioning is important
#           # kubectl apply -f deployments.yaml \
#           #   --image="${{ secrets.ECR_REGISTRY }}/${{ github.repository }}:latest"

#       - name: Verify deployment health
#         run: |
#           # Implement health checks tailored to your application, e.g.:
#           kubectl rollout status deployment my-app
#           # Add wait commands if rolling updates are involved

#       - name: Notify on success
#         uses: actions/checkout@v3  # Optional: Get latest commit message
#         with:
#           persist-credentials: false
#         run: |
#           # Replace placeholders with appropriate channels/recipients
#           curl -X POST https://hooks.slack.com/services/... \
#             -H 'Content-Type: application/json' \
#             -d '{
#               "channel": "#your-deployment-channel",
#               "username": "GitHub Actions",
#               "text": "Successfully deployed commit {{ github.sha }} to EKS: ${{ steps.deploy.outputs.deployment_url }}"
#             }'

#       - name: Notify on failure (optional)
#         uses: actions/checkout@v3  # Optional: Get latest commit message
#         with:
#           persist-credentials: false
#         if: ${{ failure() }}
#         run: |
#           # Replace placeholders with appropriate channels/recipients
#           curl -X POST https://hooks.slack.com/services/... \
#             -H 'Content-Type: application/json' \
#             -d '{
#               "channel": "#your-deployment-channel",
#               "username": "GitHub Actions",
#               "text": "Deployment of commit {{ github.sha }} to EKS failed. See logs for details."
#             }'